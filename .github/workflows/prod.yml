name: Deploy application using private image
on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/hydroguard-mock-api
  # just leaver empty
  IMAGE_TAGS: ""
  APP_NAME: mock-api-test
  APP_PORT: 8080

jobs:
  build-and-push-image:
    name: Build and push image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Determine app name
        if: env.APP_NAME == ''
        run: |
          echo "APP_NAME=$(basename $PWD)" | tee -a $GITHUB_ENV

      - name: Determine image tags
        if: env.IMAGE_TAGS == ''
        run: |
          echo "IMAGE_TAGS=latest ${GITHUB_SHA::12}" | tee -a $GITHUB_ENV

      # https://github.com/redhat-actions/buildah-build#readme
      - name: Build from Dockerfile
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ env.IMAGE_TAGS }}

          dockerfiles: |
            ./Dockerfile

      - name: log in docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # https://github.com/redhat-actions/push-to-registry#readme
      - name: Push image to registry
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ env.IMAGE_TAGS }}
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}


  create-and-expose-app:
    name: Create and expose app
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - uses: actions/checkout@v4

      # https://github.com/redhat-actions/oc-login#readme
      - name: OpenShift login
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}

      # https://github.com/redhat-actions/oc-new-app#readme
      - name: Create and expose app
        id: oc-new-app
        uses: redhat-actions/oc-new-app@v1
        with:
          app_name: ${{ env.APP_NAME }}
          image: ${{ secrets.DOCKERHUB_USERNAME }}/hydroguard-mock-api:latest
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}
          port: ${{ env.APP_PORT }}

      - name: Echo outputs
        run: |
          echo "${{ toJSON(steps.oc-new-app.outputs) }}"

      # Perform a (very) basic integration test.
      # This step is retried since the time to pull the image and start the pod can vary.
      - name: Test project is running
        id: test-project
        uses: nick-invision/retry@v2.2.0
        with:
          timeout_seconds: 3
          retry_wait_seconds: 10
          max_attempts: 30
          warning_on_retry: false
          # Just check that the root endpoint returns a success status (-f flag).
          command: curl -sSfLi ${{ steps.oc-new-app.outputs.route }}

      - name: Tear down
        if: always()
        run:
          oc delete all,secret --selector=${{ steps.oc-new-app.outputs.selector }} -n ${{ secrets.OPENSHIFT_NAMESPACE }}
