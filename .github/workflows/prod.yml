name: Deploy application using private image
on:
  push:
    branches:
      - main

env:
  IMAGE_PATH: docker.io/timv22/hydroguard-mock-api:latest

  APP_NAME: mock-api-test
  APP_PORT: 8080

jobs:
  using-registry-creds:
    name: Create secret using registry creds
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: OpenShift login
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}

      # This step will create a deployment, service, and route to run your app and expose it to the internet.
      - name: Create and expose app
        id: oc-new-app
        uses: redhat-actions/oc-new-app@v2
        with:
          app_name: ${{ env.APP_NAME }}-creds
          image: ${{ env.IMAGE_PATH }}
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}
          port: ${{ env.APP_PORT }}

      - name: Echo outputs
        run: |
          echo "${{ toJSON(steps.oc-new-app.outputs) }}"

      # Perform a (very) basic integration test.
      # This step is retried since the time to pull the image and start the pod can vary.
      - name: Test project is running
        id: test-project
        uses: nick-invision/retry@v2.2.0
        with:
          timeout_seconds: 3
          retry_wait_seconds: 10
          max_attempts: 30
          warning_on_retry: false
          # Just check that the root endpoint returns a success status (-f flag).
          command: curl -sSfLi ${{ steps.oc-new-app.outputs.route }}

      - name: Tear down
        if: always()
        run:
          oc delete all,secret --selector=${{ steps.oc-new-app.outputs.selector }} -n ${{ secrets.OPENSHIFT_NAMESPACE }}
